{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA4CeA,EAxCK,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,cAAuB,EAGPC,mBAAS,IAHF,mBAGpCC,EAHoC,KAGxBC,EAHwB,KAuB3C,OACI,0BAAMC,SAfW,SAAEC,GAEnBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAQhB,2BACEO,KAAO,OACPC,MAAUT,EACVU,SAvBkB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGdC,EAHc,iDAGmCC,UAAWH,GAH9C,+DAIDI,MAAOF,GAJN,cAIdG,EAJc,gBAKIA,EAAKC,OALT,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZtB,kBAkBbM,GAlBa,4CAAH,sDCCRO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,yBAAKc,UAAY,4DACb,yBAAKC,IAAQf,EAAOgB,IAAQN,IAC5B,+BAAMA,EAAN,OCFCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECAd,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAwBzC,OAjBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAGHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IAIEqB,EDtB0BK,CAAe1B,GAAnCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAGrB,OAEQ,oCACI,gCAAOpB,EAAP,KAECoB,GAAW,uBAAGJ,UAAY,oDAAf,cAEZ,yBAAKA,UAAY,8DAGTH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAQjB,EAAIC,IACPD,UEiBtBkB,EApCM,WAAO,IAAD,EAGa1C,mBAAS,CAAE,cAHxB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAUvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAGQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OAEpB,kBAAC,EAAD,CACIA,SAAaA,EACb2B,IAAQ3B,UCpBpC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b771eb7d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ( { setCategories }   ) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) =>{        \r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        \r\n        if ( inputValue.trim().length > 2 ) {\r\n        \r\n            setCategories( cats => [ inputValue, ...cats ] );            \r\n            setInputValue('');\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n          <input \r\n            type = 'text' \r\n            value = { inputValue } \r\n            onChange = { handleInputChange }/>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories : PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default AddCategory\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n export const getGifs = async( category ) => {\r\n       \r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=JnHHeLhdSfsWQiupN9orPXQrSMMup321`;\r\n    const resp = await fetch( url );\r\n    const { data  } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        } \r\n            \r\n\r\n    })\r\n    \r\n    return gifs;\r\n   \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n       \r\n    return (\r\n        <div className = 'card animate__animated animate__bounce animate__delay-2s'>\r\n            <img src = { url }  alt = { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifts( category);    \r\n       \r\n    \r\n    return (\r\n            \r\n            <>\r\n                <h3> { category } </h3>\r\n\r\n               { loading && <p className = 'animate__animated animate__bounce animate__fadeI' >loading...</p> }                \r\n                \r\n                <div className = 'card-grid animate__animated animate__bounce animate__flash'>\r\n\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem                         \r\n                                key = { img.id }\r\n                                { ...img }\r\n                            />\r\n                            \r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </>\r\n            \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, setState] = useState({        \r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n    \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n            \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            \r\n            })\r\n    \r\n    }, [ category ] )\r\n\r\n\r\n   \r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n   \r\n\r\n    const [categories, setCategories] = useState([ 'One Punch' ]);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories( [...categories, 'HunterXHunter' ]);        \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>   \r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>     \r\n\r\n            <ol>\r\n                \r\n                {\r\n                    categories.map( category => (\r\n                    \r\n                        <GifGrid \r\n                            category = { category }\r\n                            key = { category }\r\n                        />\r\n                        \r\n                    ) )\r\n                }\r\n\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}